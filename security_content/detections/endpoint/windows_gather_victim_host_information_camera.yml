name: Windows Gather Victim Host Information Camera
id: e4df4676-ea41-4397-b160-3ee0140dc332
version: 9
date: '2025-06-24'
author: Teoderick Contreras, Splunk
status: production
type: Anomaly
description:
  The following analytic detects a PowerShell script that enumerates camera
  devices on the targeted host. This detection leverages PowerShell Script Block Logging,
  specifically looking for commands querying Win32_PnPEntity for camera-related information.
  This activity is significant as it is commonly observed in DCRat malware, which
  collects camera data to send to its command-and-control server. If confirmed malicious,
  this behavior could indicate an attempt to gather sensitive visual information from
  the host, potentially leading to privacy breaches or further exploitation.
data_source:
  - Powershell Script Block Logging 4104
search:
  '`powershell` EventCode=4104 ScriptBlockText= "* Win32_PnPEntity *" ScriptBlockText=
  "*SELECT*" ScriptBlockText= "*WHERE*" ScriptBlockText = "*PNPClass*" ScriptBlockText
  IN ("*Image*", "*Camera*") | fillnull | stats count min(_time) as firstTime max(_time)
  as lastTime by dest signature signature_id user_id vendor_product EventID Guid Opcode
  Name Path ProcessID ScriptBlockId ScriptBlockText | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)` | `windows_gather_victim_host_information_camera_filter`'
how_to_implement:
  To successfully implement this analytic, you will need to enable
  PowerShell Script Block Logging on some or all endpoints. Additional setup here
  https://help.splunk.com/en/security-offerings/splunk-user-behavior-analytics/get-data-in/5.4.1/add-other-data-to-splunk-uba/configure-powershell-logging-to-see-powershell-anomalies-in-splunk-uba.
known_false_positives:
  Administrators may execute this powershell command to get hardware
  information related to camera on $dest$.
references:
  - https://cert.gov.ua/article/405538
  - https://malpedia.caad.fkie.fraunhofer.de/details/win.dcrat
  - https://www.mandiant.com/resources/analyzing-dark-crystal-rat-backdoor
drilldown_searches:
  - name: View the detection results for - "$dest$" and "$user_id$"
    search: '%original_detection_search% | search  dest = "$dest$" user_id = "$user_id$"'
    earliest_offset: $info_min_time$
    latest_offset: $info_max_time$
  - name: View risk events for the last 7 days for - "$dest$" and "$user_id$"
    search:
      '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$",
      "$user_id$") starthoursago=168  | stats count min(_time) as firstTime max(_time)
      as lastTime values(search_name) as "Search Name" values(risk_message) as "Risk
      Message" values(analyticstories) as "Analytic Stories" values(annotations._all)
      as "Annotations" values(annotations.mitre_attack.mitre_tactic) as "ATT&CK Tactics"
      by normalized_risk_object | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`'
    earliest_offset: $info_min_time$
    latest_offset: $info_max_time$
rba:
  message: A Powershell script to enumerate camera detected on host - $dest$
  risk_objects:
    - field: dest
      type: system
      score: 42
    - field: user_id
      type: user
      score: 42
  threat_objects: []
tags:
  analytic_story:
    - DarkCrystal RAT
  asset_type: Endpoint
  mitre_attack_id:
    - T1592.001
  product:
    - Splunk Enterprise
    - Splunk Enterprise Security
    - Splunk Cloud
  security_domain: endpoint
tests:
  - name: True Positive Test
    attack_data:
      - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/malware/dcrat/dcrat_enum_camera/windows-powershell-xml.log
        source: XmlWinEventLog:Microsoft-Windows-PowerShell/Operational
        sourcetype: XmlWinEventLog
