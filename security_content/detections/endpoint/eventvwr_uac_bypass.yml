name: Eventvwr UAC Bypass
id: 9cf8fe08-7ad8-11eb-9819-acde48001122
version: 10
date: '2025-05-02'
author: Steven Dick, Michael Haag, Splunk
status: production
type: TTP
description: The following analytic detects an Eventvwr UAC bypass by identifying
  suspicious registry modifications in the path that Eventvwr.msc references upon
  execution. This detection leverages data from Endpoint Detection and Response (EDR)
  agents, focusing on registry changes and process execution details. This activity
  is significant because it indicates a potential privilege escalation attempt, allowing
  an attacker to execute arbitrary commands with elevated privileges. If confirmed
  malicious, this could lead to unauthorized code execution, persistence, and further
  compromise of the affected system.
data_source:
- Sysmon EventID 13
search: '| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry
  WHERE (Registry.registry_path="*mscfile\\shell\\open\\command\\*") by Registry.action
  Registry.dest Registry.process_guid Registry.process_id Registry.registry_hive Registry.registry_path
  Registry.registry_key_name Registry.registry_value_data Registry.registry_value_name
  Registry.registry_value_type Registry.status Registry.user Registry.vendor_product
  | `drop_dm_object_name(Registry)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `eventvwr_uac_bypass_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Some false positives may be present and will need to be filtered.
references:
- https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1548.002/T1548.002.md
- https://attack.mitre.org/techniques/T1548/002/
- https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/
drilldown_searches:
- name: View the detection results for - "$user$" and "$dest$"
  search: '%original_detection_search% | search  user = "$user$" dest = "$dest$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$user$" and "$dest$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$user$",
    "$dest$") starthoursago=168  | stats count min(_time) as firstTime max(_time)
    as lastTime values(search_name) as "Search Name" values(risk_message) as "Risk
    Message" values(analyticstories) as "Analytic Stories" values(annotations._all)
    as "Annotations" values(annotations.mitre_attack.mitre_tactic) as "ATT&CK Tactics"
    by normalized_risk_object | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: Registry values were modified to bypass UAC using Event Viewer on $dest$
    by $user$.
  risk_objects:
  - field: user
    type: user
    score: 80
  - field: dest
    type: system
    score: 80
  threat_objects: []
tags:
  analytic_story:
  - Windows Defense Evasion Tactics
  - IcedID
  - Living Off The Land
  - Windows Registry Abuse
  - ValleyRAT
  asset_type: Endpoint
  mitre_attack_id:
  - T1548.002
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1548.002/atomic_red_team/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: XmlWinEventLog
