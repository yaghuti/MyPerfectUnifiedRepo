name: Windows Outlook Macro Security Modified
id: 47872bb4-9987-4c33-a897-4d2d1ac7d4c2
version: 1
date: '2025-09-08'
author: Raven Tait, Splunk
status: production
type: TTP
description: The following analytic detects the modification of the Windows Registry
  key "Level" under Outlook Security. This allows macros to execute without warning,
  which could allow malicious scripts to run without notice. This detection leverages data from
  the Endpoint.Registry datamodel, specifically looking for the registry value name
  "Level" with a value of "0x00000001". This activity is significant
  as it is commonly associated with some malware infections, indicating potential
  malicious intent to harvest email information. 
data_source:
- Sysmon EventID 13
search:  '| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry
  WHERE Registry.registry_path="*\\Outlook\\Security*" Registry.registry_value_name="Level"
  Registry.registry_value_data="0x00000001" by Registry.action
  Registry.dest Registry.process_guid Registry.process_id Registry.registry_hive Registry.registry_path
  Registry.registry_key_name Registry.registry_value_data Registry.registry_value_name
  Registry.registry_value_type Registry.status Registry.user Registry.vendor_product
  | `drop_dm_object_name(Registry)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `windows_outlook_macro_security_modified_filter`'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the registry value name, registry path, and registry value data from your
  endpoints. If you are using Sysmon, you must have at least version 2.0 of the official
  Sysmon TA. https://splunkbase.splunk.com/app/5709
known_false_positives: It is unusual to modify this feature on a Windows system since
  it is a default security control, although it is not rare for some policies to disable
  it. Although no false positives have been identified, use the provided filter macro
  to tune the search.
references:
- https://lab52.io/blog/analyzing-notdoor-inside-apt28s-expanding-arsenal/
- https://hackread.com/russian-apt28-notdoor-backdoor-microsoft-outlook/
drilldown_searches:
- name: View the detection results for - "$dest$"
  search: '%original_detection_search% | search  dest = "$dest$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$dest$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$")
    starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
    values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
    as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
    as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
    | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: Outlook Macro Security Level registry modified on $dest$
  risk_objects:
  - field: dest
    type: system
    score: 44
  threat_objects: []
tags:
  analytic_story:
  - NotDoor Malware
  - Windows Registry Abuse
  asset_type: Endpoint
  mitre_attack_id:
  - T1137
  - T1008
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/malware/notdoor/macro_security_level/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: XmlWinEventLog
