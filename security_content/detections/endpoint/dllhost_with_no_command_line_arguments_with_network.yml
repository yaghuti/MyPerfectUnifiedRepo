name: DLLHost with no Command Line Arguments with Network
id: f1c07594-a141-11eb-8407-acde48001122
version: 13
date: '2025-06-30'
author: Steven Dick, Michael Haag, Splunk
status: production
type: TTP
description: |
  The following analytic detects instances of DLLHost.exe running without
  command line arguments while establishing a network connection.
  This behavior is identified using Endpoint Detection and Response (EDR) telemetry, 
  focusing on process execution and network activity data. 
  It is significant because DLLHost.exe typically runs with specific arguments, 
  and its absence can indicate malicious activity, such as Cobalt Strike usage. 
  If confirmed malicious, this activity could allow attackers to execute code, 
  move laterally, or exfiltrate data, posing a severe threat to the network's security.
data_source:
- Sysmon EventID 1 AND Sysmon EventID 3
search: |
  | tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime FROM datamodel=Endpoint.Processes where 
  Processes.process_name=dllhost.exe
  Processes.action!="blocked" 
  by host _time span=1h 
  Processes.action Processes.dest Processes.original_file_name
  Processes.parent_process Processes.parent_process_exec Processes.parent_process_guid
  Processes.parent_process_id Processes.parent_process_name Processes.parent_process_path
  Processes.process Processes.process_exec Processes.process_guid Processes.process_hash
  Processes.process_id Processes.process_integrity_level Processes.process_name Processes.process_path
  Processes.user Processes.user_id Processes.vendor_product
  | `drop_dm_object_name(Processes)` 
  | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)` 
  | regex process="(?i)(dllhost\.exe.{0,4}$)"
  | rename dest as src 
  | join host process_id [
    | tstats `security_content_summariesonly`
      count 
      latest(All_Traffic.dest) as dest 
      latest(All_Traffic.dest_ip) as dest_ip 
      latest(All_Traffic.dest_port) as dest_port 
      FROM datamodel=Network_Traffic.All_Traffic where 
        All_Traffic.dest_port != 0 
        by host All_Traffic.action All_Traffic.app All_Traffic.bytes All_Traffic.bytes_in 
           All_Traffic.bytes_out All_Traffic.dest  All_Traffic.dest_ip All_Traffic.dest_port 
           All_Traffic.dvc All_Traffic.protocol All_Traffic.protocol_version All_Traffic.src 
           All_Traffic.src_ip All_Traffic.src_port All_Traffic.transport All_Traffic.user 
           All_Traffic.vendor_product All_Traffic.direction All_Traffic.process_id
    | `drop_dm_object_name(All_Traffic)`
  ] 
  | `dllhost_with_no_command_line_arguments_with_network_filter`
how_to_implement: |
  The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: |
  Although unlikely, some legitimate third party applications
  may use a moved copy of dllhost, triggering a false positive.
references:
- https://raw.githubusercontent.com/threatexpress/malleable-c2/c3385e481159a759f79b8acfe11acf240893b830/jquery-c2.4.2.profile
- https://www.cobaltstrike.com/blog/learn-pipe-fitting-for-all-of-your-offense-projects/
drilldown_searches:
- name: View the detection results for - "$dest$"
  search: '%original_detection_search% | search  dest = "$dest$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$dest$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$")
    starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
    values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
    as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
    as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
    | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: The process $process_name$ was spawned by $parent_process_name$ without
    any command-line arguments on $src$ by $user$.
  risk_objects:
  - field: user
    type: user
    score: 49
  - field: dest
    type: system
    score: 49
  threat_objects:
  - field: parent_process_name
    type: process
  - field: process_name
    type: process_name
tags:
  analytic_story:
  - BlackByte Ransomware
  - Cobalt Strike
  - Graceful Wipe Out Attack
  - Cactus Ransomware
  - Storm-2460 CLFS Zero Day Exploitation
  - Earth Alux
  asset_type: Endpoint
  mitre_attack_id:
  - T1055
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1055/cobalt_strike/windows-sysmon_dllhost.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: XmlWinEventLog
