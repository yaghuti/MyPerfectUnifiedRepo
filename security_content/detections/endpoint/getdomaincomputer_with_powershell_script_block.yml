name: GetDomainComputer with PowerShell Script Block
id: f64da023-b988-4775-8d57-38e512beb56e
version: 8
date: '2025-06-24'
author: Mauricio Velazco, Splunk
status: production
type: TTP
description:
  The following analytic detects the execution of the `Get-DomainComputer`
  commandlet using PowerShell Script Block Logging (EventCode=4104). This commandlet
  is part of PowerView, a tool often used for enumerating domain computers within
  Windows environments. The detection leverages script block text analysis to identify
  this specific command. Monitoring this activity is crucial as it can indicate an
  adversary's attempt to gather information about domain computers, which is a common
  step in Active Directory reconnaissance. If confirmed malicious, this activity could
  lead to further network enumeration and potential lateral movement within the domain.
data_source:
  - Powershell Script Block Logging 4104
search:
  '`powershell` EventCode=4104 (ScriptBlockText = "*Get-DomainComputer*") |
  fillnull | stats count min(_time) as firstTime max(_time) as lastTime by dest signature
  signature_id user_id vendor_product EventID Guid Opcode Name Path ProcessID ScriptBlockId
  ScriptBlockText | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `getdomaincomputer_with_powershell_script_block_filter`'
how_to_implement:
  To successfully implement this analytic, you will need to enable
  PowerShell Script Block Logging on some or all endpoints. Additional setup here
  https://help.splunk.com/en/security-offerings/splunk-user-behavior-analytics/get-data-in/5.4.1/add-other-data-to-splunk-uba/configure-powershell-logging-to-see-powershell-anomalies-in-splunk-uba.
known_false_positives: Administrators or power users may use PowerView for troubleshooting.
references:
  - https://attack.mitre.org/techniques/T1018/
  - https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainComputer/
drilldown_searches:
  - name: View the detection results for - "$dest$"
    search: '%original_detection_search% | search  dest = "$dest$"'
    earliest_offset: $info_min_time$
    latest_offset: $info_max_time$
  - name: View risk events for the last 7 days for - "$dest$"
    search:
      '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$")
      starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
      values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
      as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
      as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
      | `security_content_ctime(lastTime)`'
    earliest_offset: $info_min_time$
    latest_offset: $info_max_time$
rba:
  message: Remote system discovery with PowerView on $dest$ by $user_id$
  risk_objects:
    - field: dest
      type: system
      score: 24
  threat_objects: []
tags:
  analytic_story:
    - Active Directory Discovery
  asset_type: Endpoint
  mitre_attack_id:
    - T1018
  product:
    - Splunk Enterprise
    - Splunk Enterprise Security
    - Splunk Cloud
  security_domain: endpoint
tests:
  - name: True Positive Test
    attack_data:
      - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1059.001/powershell_script_block_logging/sbl_xml.log
        source: XmlWinEventLog:Microsoft-Windows-PowerShell/Operational
        sourcetype: XmlWinEventLog
