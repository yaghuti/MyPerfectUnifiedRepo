name: Windows Exfiltration Over C2 Via Powershell UploadString
id: 59e8bf41-7472-412a-90d3-00f3afa452e9
version: 7
date: '2025-06-24'
author: Teoderick Contreras, Splunk
status: production
type: TTP
data_source:
  - Powershell Script Block Logging 4104
description:
  The following analytic identifies potential data exfiltration using the
  PowerShell `net.webclient` command with the `UploadString` method. It leverages
  PowerShell Script Block Logging to detect instances where this command is executed.
  This activity is significant as it may indicate an attempt to upload sensitive data,
  such as desktop screenshots or files, to an external or internal URI, often associated
  with malware like Winter-Vivern. If confirmed malicious, this could lead to unauthorized
  data transfer, compromising sensitive information and potentially leading to further
  exploitation of the compromised host.
search:
  '`powershell` EventCode=4104 ScriptBlockText = "*Net.webclient*" AND ScriptBlockText
  = "*.UploadString*" | fillnull | stats count min(_time) as firstTime max(_time)
  as lastTime by dest signature signature_id user_id vendor_product EventID Guid Opcode
  Name Path ProcessID ScriptBlockId ScriptBlockText | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)` | `windows_exfiltration_over_c2_via_powershell_uploadstring_filter`'
how_to_implement:
  To successfully implement this analytic, you will need to enable
  PowerShell Script Block Logging on some or all endpoints. Additional setup here
  https://help.splunk.com/en/security-offerings/splunk-user-behavior-analytics/get-data-in/5.4.1/add-other-data-to-splunk-uba/configure-powershell-logging-to-see-powershell-anomalies-in-splunk-uba.
known_false_positives: False positives should be limited. Filter as needed.
references:
  - https://twitter.com/_CERT_UA/status/1620781684257091584
  - https://cert.gov.ua/article/3761104
drilldown_searches:
  - name: View the detection results for - "$Computer$"
    search: '%original_detection_search% | search  Computer = "$Computer$"'
    earliest_offset: $info_min_time$
    latest_offset: $info_max_time$
  - name: View risk events for the last 7 days for - "$Computer$"
    search:
      '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$Computer$")
      starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
      values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
      as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
      as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
      | `security_content_ctime(lastTime)`'
    earliest_offset: $info_min_time$
    latest_offset: $info_max_time$
rba:
  message:
    A PowerShell script on $dest$ is attempting to transfer files to a remote
    URL.
  risk_objects:
    - field: dest
      type: system
      score: 49
  threat_objects: []
tags:
  analytic_story:
    - Winter Vivern
  asset_type: Endpoint
  mitre_attack_id:
    - T1041
  product:
    - Splunk Enterprise
    - Splunk Enterprise Security
    - Splunk Cloud
  security_domain: endpoint
tests:
  - name: True Positive Test
    attack_data:
      - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/malware/winter-vivern/pwh_uploadstring/windows-powershell-xml.log
        source: XmlWinEventLog:Microsoft-Windows-PowerShell/Operational
        sourcetype: XmlWinEventLog
