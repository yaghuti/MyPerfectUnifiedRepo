name: Windows Scheduled Task Service Spawned Shell
id: d8120352-3b62-4e3c-8cb6-7b47584dd5e8
version: 7
date: '2025-05-02'
author: Steven Dick
status: production
type: TTP
description: The following analytic detects when the Task Scheduler service ("svchost.exe
  -k netsvcs -p -s Schedule") spawns common command line, scripting, or shell execution
  binaries such as "powershell.exe" or "cmd.exe". This detection leverages data from
  Endpoint Detection and Response (EDR) agents, focusing on process and parent process
  relationships. This activity is significant as attackers often abuse the Task Scheduler
  for execution and persistence, blending in with legitimate Windows operations. If
  confirmed malicious, this could allow attackers to execute arbitrary code, maintain
  persistence, or escalate privileges within the environment.
data_source:
- Sysmon EventID 1
- CrowdStrike ProcessRollup2
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where Processes.parent_process="*\\system32\\svchost.exe*"
  AND Processes.parent_process="*-k*" AND Processes.parent_process= "*netsvcs*" AND
  Processes.parent_process="*-p*" AND Processes.parent_process="*-s*" AND Processes.parent_process="*Schedule*"
  Processes.process_name IN("powershell.exe", "wscript.exe", "cscript.exe", "cmd.exe",
  "sh.exe", "ksh.exe", "zsh.exe", "bash.exe", "scrcons.exe","pwsh.exe") by Processes.action
  Processes.dest Processes.original_file_name Processes.parent_process Processes.parent_process_exec
  Processes.parent_process_guid Processes.parent_process_id Processes.parent_process_name
  Processes.parent_process_path Processes.process Processes.process_exec Processes.process_guid
  Processes.process_hash Processes.process_id Processes.process_integrity_level Processes.process_name
  Processes.process_path Processes.user Processes.user_id Processes.vendor_product
  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `windows_scheduled_task_service_spawned_shell_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Unknown, possible custom scripting.
references:
- https://www.mandiant.com/resources/blog/tracking-evolution-gootloader-operations
- https://nasbench.medium.com/a-deep-dive-into-windows-scheduled-tasks-and-the-processes-running-them-218d1eed4cce
- https://attack.mitre.org/techniques/T1053/005/
drilldown_searches:
- name: View the detection results for - "$dest$" and "$user$"
  search: '%original_detection_search% | search  dest = "$dest$" user = "$user$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$dest$" and "$user$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$",
    "$user$") starthoursago=168  | stats count min(_time) as firstTime max(_time)
    as lastTime values(search_name) as "Search Name" values(risk_message) as "Risk
    Message" values(analyticstories) as "Analytic Stories" values(annotations._all)
    as "Annotations" values(annotations.mitre_attack.mitre_tactic) as "ATT&CK Tactics"
    by normalized_risk_object | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: A windows scheduled task spawned the shell application $process_name$ on
    $dest$.
  risk_objects:
  - field: dest
    type: system
    score: 20
  - field: user
    type: user
    score: 20
  threat_objects:
  - field: process_name
    type: process_name
tags:
  analytic_story:
  - Windows Persistence Techniques
  asset_type: Endpoint
  mitre_attack_id:
  - T1053.005
  - T1059
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/malware/gootloader/partial_ttps/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: XmlWinEventLog
