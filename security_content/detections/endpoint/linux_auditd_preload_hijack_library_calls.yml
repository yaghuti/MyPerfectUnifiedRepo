name: Linux Auditd Preload Hijack Library Calls
id: 35c50572-a70b-452f-afa9-bebdf3c3ce36
version: 9
date: '2025-05-02'
author: Teoderick Contreras, Splunk
status: production
type: TTP
description: The following analytic detects the use of the LD_PRELOAD environment
  variable to hijack or hook library functions on a Linux platform. It leverages data
  from Linux Auditd, focusing on process execution logs that include command-line
  details. This activity is significant because adversaries, malware authors, and
  red teamers commonly use this technique to gain elevated privileges and establish
  persistence on a compromised machine. If confirmed malicious, this behavior could
  allow attackers to execute arbitrary code, escalate privileges, and maintain long-term
  access to the system.
data_source:
- Linux Auditd Execve
search: '`linux_auditd` execve_command = "*LD_PRELOAD*" | rename host as dest | rename
  comm as process_name | rename exe as process | stats count min(_time) as firstTime
  max(_time) as lastTime by argc execve_command dest | `security_content_ctime(firstTime)`|
  `security_content_ctime(lastTime)` | `linux_auditd_preload_hijack_library_calls_filter`'
how_to_implement: To implement this detection, the process begins by ingesting auditd
  data, that consists of SYSCALL, TYPE, EXECVE and PROCTITLE events, which captures
  command-line executions and process details on Unix/Linux systems. These logs should
  be ingested and processed using Splunk Add-on for Unix and Linux (https://splunkbase.splunk.com/app/833),
  which is essential for correctly parsing and categorizing the data. The next step
  involves normalizing the field names  to match the field names set by the Splunk
  Common Information Model (CIM) to ensure consistency across different data sources
  and enhance the efficiency of data modeling. This approach enables effective monitoring
  and detection of linux endpoints where auditd is deployed
known_false_positives: Administrator or network operator can execute this command.
  Please update the filter macros to remove false positives.
references:
- https://compilepeace.medium.com/memory-malware-part-0x2-writing-userland-rootkits-via-ld-preload-30121c8343d5
drilldown_searches:
- name: View the detection results for - "$dest$"
  search: '%original_detection_search% | search  dest = "$dest$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$dest$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$")
    starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
    values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
    as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
    as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
    | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: A [$execve_command$] event occurred on host - [$dest$] to hijack or hook
    library functions using the LD_PRELOAD environment variable.
  risk_objects:
  - field: dest
    type: system
    score: 81
  threat_objects: []
tags:
  analytic_story:
  - Linux Persistence Techniques
  - Compromised Linux Host
  - China-Nexus Threat Activity
  - Salt Typhoon
  - Linux Privilege Escalation
  asset_type: Endpoint
  mitre_attack_id:
  - T1574.006
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1574.006/linux_auditd_ldpreload/auditd_execve_ldpreload.log
    source: auditd
    sourcetype: auditd
