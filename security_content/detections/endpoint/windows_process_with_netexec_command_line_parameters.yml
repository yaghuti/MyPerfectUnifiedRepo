name: Windows Process With NetExec Command Line Parameters
id: adbff89c-c1f2-4a2e-88a4-b5e645856510
version: 7
date: '2025-05-02'
author: Steven Dick, Github Community
status: production
type: TTP
description: The following analytic detects the use of NetExec (formally CrackmapExec)
  a toolset used for post-exploitation enumeration and attack within Active Directory
  environments through command line parameters. It leverages Endpoint Detection and
  Response (EDR) data to identify specific command-line arguments associated with
  actions like ticket manipulation, kerberoasting, and password spraying. This activity
  is significant as NetExec is used by adversaries to exploit Kerberos for privilege
  escalation and lateral movement. If confirmed malicious, this could lead to unauthorized
  access, persistence, and potential compromise of sensitive information within the
  network.
data_source:
- Windows Event Log Security 4688
- Sysmon EventID 1
- CrowdStrike ProcessRollup2
search: '| tstats `security_content_summariesonly` count min(_time) AS firstTime,
  max(_time) AS lastTime FROM datamodel=Endpoint.Processes where NOT Processes.os="Linux"
  Processes.process_name IN ("nxc.exe") OR Processes.original_file_name IN ("nxc.exe")
  OR (Processes.process IN ("* smb *","* ssh *","* ldap *","* ftp *","* wmi *","*
  winrm *","* rdp *","* vnc *","* mssql *","* nfs *") AND ((Processes.process = "*
  -p *" AND Processes.process = "* -u *") OR Processes.process IN ("* -x *","* -M
  *","* --*"))) by Processes.action Processes.dest Processes.original_file_name Processes.parent_process
  Processes.parent_process_exec Processes.parent_process_guid Processes.parent_process_id
  Processes.parent_process_name Processes.parent_process_path Processes.process Processes.process_exec
  Processes.process_guid Processes.process_hash Processes.process_id Processes.process_integrity_level
  Processes.process_name Processes.process_path Processes.user Processes.user_id Processes.vendor_product
  |`drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `windows_process_with_netexec_command_line_parameters_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: Although unlikely, legitimate applications may use the same
  command line parameters as NetExec. Filter as needed.
references:
- https://www.netexec.wiki/
- https://www.johnvictorwolfe.com/2024/07/21/the-successor-to-crackmapexec/
- https://attack.mitre.org/software/S0488/
drilldown_searches:
- name: View the detection results for - "$dest$" and "$user$"
  search: '%original_detection_search% | search dest = "$dest$" user = "$user$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$dest$" and "$user$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$","$user$")
    starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
    values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
    as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
    as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
    | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: Investigate processes on $dest$
  search: '| from datamodel:Endpoint.Processes | search dest=$dest$ process_name =
    $process_name$'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: NetExec command line parameters were used on $dest$ by $user$
  risk_objects:
  - field: user
    type: user
    score: 64
  - field: dest
    type: system
    score: 64
  threat_objects:
  - field: parent_process_name
    type: parent_process_name
tags:
  analytic_story:
  - Active Directory Kerberos Attacks
  - Active Directory Privilege Escalation
  asset_type: Endpoint
  mitre_attack_id:
  - T1550.003
  - T1558.003
  - T1558.004
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1550/netexec_toolkit_usage/netexec_toolkit_usage.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: XmlWinEventLog
