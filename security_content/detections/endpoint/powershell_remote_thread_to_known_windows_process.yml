name: Powershell Remote Thread To Known Windows Process
id: ec102cb2-a0f5-11eb-9b38-acde48001122
version: 7
date: '2025-05-02'
author: Teoderick Contreras, Splunk
status: production
type: TTP
description: The following analytic detects suspicious PowerShell processes attempting
  to inject code into critical Windows processes using CreateRemoteThread. It leverages
  Sysmon EventCode 8 to identify instances where PowerShell spawns threads in processes
  like svchost.exe, csrss.exe, and others. This activity is significant as it is commonly
  used by malware such as TrickBot and offensive tools like Cobalt Strike to execute
  malicious payloads, establish reverse shells, or download additional malware. If
  confirmed malicious, this behavior could lead to unauthorized code execution, privilege
  escalation, and persistent access within the environment.
data_source:
- Sysmon EventID 8
search: '`sysmon` EventCode = 8 parent_process_name IN ("powershell_ise.exe", "powershell.exe")
  TargetImage IN ("*\\svchost.exe","*\\csrss.exe" "*\\gpupdate.exe", "*\\explorer.exe","*\\services.exe","*\\winlogon.exe","*\\smss.exe","*\\wininit.exe","*\\userinit.exe","*\\spoolsv.exe","*\\taskhost.exe")
  | stats count min(_time) as firstTime max(_time) as lastTime by EventID Guid NewThreadId
  ProcessID SecurityID SourceImage SourceProcessGuid SourceProcessId StartAddress
  StartFunction StartModule TargetImage TargetProcessGuid TargetProcessId UserID dest
  parent_process_exec parent_process_guid parent_process_id parent_process_name parent_process_path
  process_exec process_guid process_id process_name process_path signature signature_id
  user_id vendor_product | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `powershell_remote_thread_to_known_windows_process_filter`'
how_to_implement: To successfully implement this search, you need to be ingesting
  logs with the process name, Create Remote thread from your endpoints. If you are
  using Sysmon, you must have at least version 6.0.4 of the Sysmon TA. Tune and filter
  known instances of create remote thread may be used.
known_false_positives: unknown
references:
- https://thedfirreport.com/2021/01/11/trickbot-still-alive-and-well/
drilldown_searches:
- name: View the detection results for - "$dest$"
  search: '%original_detection_search% | search  dest = "$dest$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$dest$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$")
    starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
    values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
    as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
    as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
    | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: A suspicious powershell process $process_name$ that tries to create a remote
    thread on target process $TargetImage$ on host $dest$
  risk_objects:
  - field: dest
    type: system
    score: 63
  threat_objects:
  - field: process_name
    type: process_name
tags:
  analytic_story:
  - Trickbot
  asset_type: Endpoint
  mitre_attack_id:
  - T1055
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/malware/trickbot/infection/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: XmlWinEventLog
