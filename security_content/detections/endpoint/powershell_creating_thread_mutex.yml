name: Powershell Creating Thread Mutex
id: 637557ec-ca08-11eb-bd0a-acde48001122
version: 11
date: '2025-06-24'
author: Teoderick Contreras, Splunk
status: production
type: TTP
description:
  The following analytic detects the execution of PowerShell scripts using
  the `mutex` function via EventCode 4104. This detection leverages PowerShell Script
  Block Logging to identify scripts that create thread mutexes, a technique often
  used in obfuscated scripts to ensure only one instance runs on a compromised machine.
  This activity is significant as it may indicate the presence of sophisticated malware
  or persistence mechanisms. If confirmed malicious, the attacker could maintain exclusive
  control over a process, potentially leading to further exploitation or persistence
  within the environment.
data_source:
  - Powershell Script Block Logging 4104
search:
  '`powershell` EventCode=4104 ScriptBlockText = "*Threading.Mutex*" | fillnull
  | stats count min(_time) as firstTime max(_time) as lastTime by dest signature signature_id
  user_id vendor_product EventID Guid Opcode Name Path ProcessID ScriptBlockId ScriptBlockText
  | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `powershell_creating_thread_mutex_filter`'
how_to_implement:
  To successfully implement this analytic, you will need to enable
  PowerShell Script Block Logging on some or all endpoints. Additional setup here
  https://help.splunk.com/en/security-offerings/splunk-user-behavior-analytics/get-data-in/5.4.1/add-other-data-to-splunk-uba/configure-powershell-logging-to-see-powershell-anomalies-in-splunk-uba.
known_false_positives:
  powershell developer may used this function in their script
  for instance checking too.
references:
  - https://isc.sans.edu/forums/diary/Some+Powershell+Malicious+Code/22988/
  - https://help.splunk.com/en/security-offerings/splunk-user-behavior-analytics/get-data-in/5.4.1/add-other-data-to-splunk-uba/configure-powershell-logging-to-see-powershell-anomalies-in-splunk-uba.
  - https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63
  - https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf
  - https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/
drilldown_searches:
  - name: View the detection results for - "$dest$" and "$user_id$"
    search: '%original_detection_search% | search  dest = "$dest$" user_id = "$user_id$"'
    earliest_offset: $info_min_time$
    latest_offset: $info_max_time$
  - name: View risk events for the last 7 days for - "$dest$" and "$user_id$"
    search:
      '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$",
      "$user_id$") starthoursago=168  | stats count min(_time) as firstTime max(_time)
      as lastTime values(search_name) as "Search Name" values(risk_message) as "Risk
      Message" values(analyticstories) as "Analytic Stories" values(annotations._all)
      as "Annotations" values(annotations.mitre_attack.mitre_tactic) as "ATT&CK Tactics"
      by normalized_risk_object | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`'
    earliest_offset: $info_min_time$
    latest_offset: $info_max_time$
rba:
  message: A suspicious powershell script contains Thread Mutex on host $dest$
  risk_objects:
    - field: dest
      type: system
      score: 40
    - field: user_id
      type: user
      score: 40
  threat_objects: []
tags:
  analytic_story:
    - Malicious PowerShell
    - Water Gamayun
  asset_type: Endpoint
  mitre_attack_id:
    - T1027.005
    - T1059.001
  product:
    - Splunk Enterprise
    - Splunk Enterprise Security
    - Splunk Cloud
  security_domain: endpoint
tests:
  - name: True Positive Test
    attack_data:
      - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1059.001/powershell_script_block_logging/sbl_xml.log
        source: XmlWinEventLog:Microsoft-Windows-PowerShell/Operational
        sourcetype: XmlWinEventLog
