name: Linux Auditd Unload Module Via Modprobe
id: 90964d6a-4b5f-409a-85bd-95e261e03fe9
version: 6
date: '2025-05-02'
author: Teoderick Contreras, Splunk
status: production
type: TTP
description: The following analytic detects suspicious use of the `modprobe` command
  to unload kernel modules, which may indicate an attempt to disable critical system
  components or evade detection. The `modprobe` utility manages kernel modules, and
  unauthorized unloading of modules can disrupt system security features, remove logging
  capabilities, or conceal malicious activities. By monitoring for unusual or unauthorized
  `modprobe` operations involving module unloading, this analytic helps identify potential
  tampering with kernel functionality, enabling security teams to investigate and
  address possible threats to system integrity.
data_source:
- Linux Auditd Execve
search: '`linux_auditd` execve_command = "*modprobe*" AND execve_command = "*-r *"
  | rename host as dest 
  | rename comm as process_name 
  | rename exe as process 
  | stats count min(_time) as firstTime max(_time) as lastTime by argc execve_command dest 
  | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`
  | `linux_auditd_unload_module_via_modprobe_filter`'
how_to_implement: To implement this detection, the process begins by ingesting auditd
  data, that consists of SYSCALL, TYPE, EXECVE and PROCTITLE events, which captures
  command-line executions and process details on Unix/Linux systems. These logs should
  be ingested and processed using Splunk Add-on for Unix and Linux (https://splunkbase.splunk.com/app/833),
  which is essential for correctly parsing and categorizing the data. The next step
  involves normalizing the field names  to match the field names set by the Splunk
  Common Information Model (CIM) to ensure consistency across different data sources
  and enhance the efficiency of data modeling. This approach enables effective monitoring
  and detection of linux endpoints where auditd is deployed
known_false_positives: Administrator or network operator can use this application
  for automation purposes. Please update the filter macros to remove false positives.
references:
- https://www.splunk.com/en_us/blog/security/deep-dive-on-persistence-privilege-escalation-technique-and-detection-in-linux-platform.html
drilldown_searches:
- name: View the detection results for - "$dest$"
  search: '%original_detection_search% | search  dest = "$dest$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$dest$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$")
    starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
    values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
    as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
    as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
    | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: A [$execve_command$] event occurred on host - [$dest$] to unload a kernel
    module via the modprobe command.
  risk_objects:
  - field: dest
    type: system
    score: 49
  threat_objects: []
tags:
  analytic_story:
  - Linux Living Off The Land
  - Linux Privilege Escalation
  - Linux Persistence Techniques
  - Compromised Linux Host
  asset_type: Endpoint
  mitre_attack_id:
  - T1547.006
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1547.006/linux_auditd_modprobe_unload_module/auditd_execve_modprobe.log
    source: auditd
    sourcetype: auditd
