name: PowerShell Invoke CIMMethod CIMSession
id: 651ee958-a433-471c-b264-39725b788b83
version: 7
date: '2025-06-24'
author: Michael Haag, Splunk
type: Anomaly
status: production
data_source:
  - Powershell Script Block Logging 4104
description:
  The following analytic detects the creation of a New-CIMSession cmdlet
  followed by the use of the Invoke-CIMMethod cmdlet within PowerShell. It leverages
  PowerShell Script Block Logging to identify these specific cmdlets in the ScriptBlockText
  field. This activity is significant because it mirrors the behavior of the Invoke-WMIMethod
  cmdlet, often used for remote code execution via NTLMv2 pass-the-hash authentication.
  If confirmed malicious, this could allow an attacker to execute commands remotely,
  potentially leading to unauthorized access and control over targeted systems.
search:
  '`powershell` EventCode=4104 ScriptBlockText IN ("*invoke-CIMMethod*", "*New-CimSession*")
  | fillnull | stats count min(_time) as firstTime max(_time) as lastTime by dest
  signature signature_id user_id vendor_product EventID Guid Opcode Name Path ProcessID
  ScriptBlockId ScriptBlockText | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`
  | `powershell_invoke_cimmethod_cimsession_filter`'
how_to_implement:
  To successfully implement this analytic, you will need to enable
  PowerShell Script Block Logging on some or all endpoints. Additional setup here
  https://help.splunk.com/en/security-offerings/splunk-user-behavior-analytics/get-data-in/5.4.1/add-other-data-to-splunk-uba/configure-powershell-logging-to-see-powershell-anomalies-in-splunk-uba.
known_false_positives:
  False positives may be present based on third-party applications
  or administrators using CIM. It is recommended to apply appropriate filters as needed
  to minimize the number of false positives.
references:
  - https://learn.microsoft.com/en-us/powershell/module/cimcmdlets/invoke-cimmethod?view=powershell-7.3
drilldown_searches:
  - name: View the detection results for - "$Computer$"
    search: '%original_detection_search% | search  Computer = "$Computer$"'
    earliest_offset: $info_min_time$
    latest_offset: $info_max_time$
  - name: View risk events for the last 7 days for - "$Computer$"
    search:
      '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$Computer$")
      starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
      values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
      as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
      as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
      | `security_content_ctime(lastTime)`'
    earliest_offset: $info_min_time$
    latest_offset: $info_max_time$
rba:
  message:
    PowerShell was identified running a Invoke-CIMMethod Invoke-CIMSession
    on $dest$.
  risk_objects:
    - field: dest
      type: system
      score: 25
  threat_objects: []
tags:
  analytic_story:
    - Malicious PowerShell
    - Active Directory Lateral Movement
  asset_type: Endpoint
  mitre_attack_id:
    - T1047
  product:
    - Splunk Enterprise
    - Splunk Enterprise Security
    - Splunk Cloud
  security_domain: endpoint
tests:
  - name: True Positive Test
    attack_data:
      - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1047/atomic_red_team/4104-cimmethod-windows-powershell.log
        source: XmlWinEventLog:Microsoft-Windows-PowerShell/Operational
        sourcetype: XmlWinEventLog
