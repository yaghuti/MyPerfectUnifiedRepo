name: Remote Desktop Network Traffic
id: 272b8407-842d-4b3d-bead-a704584003d3
version: 13
date: '2025-08-07'
author: David Dorsey, Splunk
status: production
type: Anomaly
description: The following analytic detects unusual Remote Desktop Protocol 
  (RDP) traffic on TCP/3389 by filtering out known RDP sources and destinations,
  focusing on atypical connections within the network. This detection leverages 
  network traffic data to identify potentially unauthorized RDP access. 
  Monitoring this activity is crucial for a SOC as unauthorized RDP access can 
  indicate an attacker's attempt to control networked systems, leading to data 
  theft, ransomware deployment, or further network compromise. If confirmed 
  malicious, this activity could result in significant data breaches or complete
  system and network control loss.
data_source:
- Zeek Conn
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Network_Traffic where All_Traffic.dest_port=3389 AND
  All_Traffic.dest_category!=common_rdp_destination AND All_Traffic.src_category!=common_rdp_source
  AND All_Traffic.action="allowed" by All_Traffic.src All_Traffic.dest All_Traffic.dest_port
  All_Traffic.dest_ip All_Traffic.dvc All_Traffic.src_ip All_Traffic.src_port All_Traffic.vendor_product
  | `drop_dm_object_name("All_Traffic")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`
  | `remote_desktop_network_traffic_filter`'
how_to_implement: To successfully implement this search you need to identify 
  systems that commonly originate remote desktop traffic and that commonly 
  receive remote desktop traffic. You can use the included support search 
  "Identify Systems Creating Remote Desktop Traffic" to identify systems that 
  originate the traffic and the search "Identify Systems Receiving Remote 
  Desktop Traffic" to identify systems that receive a lot of remote desktop 
  traffic. After identifying these systems, you will need to add the 
  "common_rdp_source" or "common_rdp_destination" category to that system 
  depending on the usage, using the Enterprise Security Assets and Identities 
  framework.  This can be done by adding an entry in the assets.csv file located
  in SA-IdentityManagement/lookups.
known_false_positives: Remote Desktop may be used legitimately by users on the 
  network.
references: []
drilldown_searches:
- name: View the detection results for - "$src$"
  search: '%original_detection_search% | search  src = "$src$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$src$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$src$")
    starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
    values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
    as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
    as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
    | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: Remote Desktop Network Traffic Anomaly Detected from $src$ to $dest$
  risk_objects:
  - field: src
    type: system
    score: 25
  threat_objects:
  - field: dest
    type: ip_address
tags:
  analytic_story:
  - SamSam Ransomware
  - Ryuk Ransomware
  - Hidden Cobra Malware
  - Active Directory Lateral Movement
  - Windows RDP Artifacts and Defense Evasion
  asset_type: Endpoint
  mitre_attack_id:
  - T1021.001
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: network
  manual_test: This detection uses builtin lookup from Enterprise Security.
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1021.001/remote_desktop_connection/zeek_conn.log
    sourcetype: bro:conn:json
    source: conn.log
