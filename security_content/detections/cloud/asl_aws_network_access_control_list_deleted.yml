name: ASL AWS Network Access Control List Deleted
id: e010ddf5-e9a5-44e5-bdd6-0c919ba8fc8b
version: 4
date: '2025-05-02'
author: Patrick Bareiss, Splunk
status: production
type: Anomaly
description: The following analytic detects the deletion of AWS Network Access Control
  Lists (ACLs). It leverages AWS CloudTrail logs to identify events where a user deletes
  a network ACL entry. This activity is significant because deleting a network ACL
  can remove critical access restrictions, potentially allowing unauthorized access
  to cloud instances. If confirmed malicious, this action could enable attackers to
  bypass network security controls, leading to unauthorized access, data exfiltration,
  or further compromise of the cloud environment.
data_source:
- ASL AWS CloudTrail
search: '`amazon_security_lake` api.operation=DeleteNetworkAclEntry status=Success
  | spath input=api.request.data path=egress output=egress
  | spath input=api.request.data path=networkAclId output=networkAclId
  | search egress=false 
  | fillnull 
  | stats count min(_time) as firstTime max(_time) as lastTime by actor.user.uid api.operation api.service.name http_request.user_agent src_endpoint.ip actor.user.account.uid cloud.provider cloud.region networkAclId 
  | rename actor.user.uid as user api.operation as action api.service.name as dest http_request.user_agent as user_agent src_endpoint.ip as src actor.user.account.uid as vendor_account cloud.provider as vendor_product cloud.region as vendor_region 
  | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `asl_aws_network_access_control_list_deleted_filter`'
how_to_implement: The detection is based on Amazon Security Lake events from Amazon Web Services (AWS), which is a centralized data lake that provides security-related data from AWS services. To use this detection, you must ingest CloudTrail logs from Amazon Security Lake into Splunk. To run this search, ensure that you ingest events using the latest version of Splunk Add-on for Amazon Web Services (https://splunkbase.splunk.com/app/1876) or the Federated Analytics App.
known_false_positives: It's possible that a user has legitimately deleted a network ACL.
references: []
drilldown_searches:
- name: View the detection results for - "$user$"
  search: '%original_detection_search% | search  user_arn = "$user$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$user$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$user$")
    starthoursago=168  | stats count min(_time) as firstTime max(_time) as lastTime
    values(search_name) as "Search Name" values(risk_message) as "Risk Message" values(analyticstories)
    as "Analytic Stories" values(annotations._all) as "Annotations" values(annotations.mitre_attack.mitre_tactic)
    as "ATT&CK Tactics" by normalized_risk_object | `security_content_ctime(firstTime)`
    | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: User $user$ from $src$ has sucessfully deleted network ACLs entry.
  risk_objects:
  - field: user
    type: user
    score: 5
  threat_objects:
  - field: src
    type: ip_address
tags:
  analytic_story:
  - AWS Network ACL Activity
  asset_type: AWS Instance
  mitre_attack_id:
  - T1562.007
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: network
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1562.007/aws_delete_acl/asl_ocsf_cloudtrail.json
    sourcetype: aws:asl
    source: aws_asl
