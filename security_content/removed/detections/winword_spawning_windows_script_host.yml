name: Winword Spawning Windows Script Host
id: 637e1b5c-9be1-11eb-9c32-acde48001122
version: 7
date: '2025-02-10'
author: Michael Haag, Splunk
status: removed
type: TTP
description: The following analytic has been deprecated in favour of a more generic
  approach. The following analytic identifies instances where Microsoft Winword.exe
  spawns Windows Script Host processes (cscript.exe or wscript.exe). This behavior
  is detected using Endpoint Detection and Response (EDR) telemetry, focusing on process
  creation events where the parent process is Winword.exe. This activity is significant
  because it is uncommon and often associated with spearphishing attacks, where malicious
  scripts are executed via document macros. If confirmed malicious, this could lead
  to code execution, allowing attackers to gain initial access, execute further payloads,
  or establish persistence within the environment.
data_source:
- Sysmon EventID 1
- Windows Event Log Security 4688
- CrowdStrike ProcessRollup2
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name="winword.exe"
  Processes.process_name IN ("cscript.exe", "wscript.exe") by Processes.dest Processes.user
  Processes.parent_process Processes.process_name Processes.process Processes.process_id
  Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`
  | `security_content_ctime(lastTime)` | `winword_spawning_windows_script_host_filter`'
how_to_implement: The detection is based on data that originates from Endpoint Detection
  and Response (EDR) agents. These agents are designed to provide security-related
  telemetry from the endpoints where the agent is installed. To implement this search,
  you must ingest logs that contain the process GUID, process name, and parent process.
  Additionally, you must ingest complete command-line executions. These logs must
  be processed using the appropriate Splunk Technology Add-ons that are specific to
  the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint`
  data model. Use the Splunk Common Information Model (CIM) to normalize the field
  names and speed up the data modeling process.
known_false_positives: There will be limited false positives and it will be different
  for every environment. Tune by child process or command-line as needed.
references:
- https://attack.mitre.org/techniques/T1566/001/
drilldown_searches:
- name: View the detection results for - "$dest$" and "$user$"
  search: '%original_detection_search% | search  dest = "$dest$" user = "$user$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
- name: View risk events for the last 7 days for - "$dest$" and "$user$"
  search: '| from datamodel Risk.All_Risk | search normalized_risk_object IN ("$dest$",
    "$user$") starthoursago=168  | stats count min(_time) as firstTime max(_time)
    as lastTime values(search_name) as "Search Name" values(risk_message) as "Risk
    Message" values(analyticstories) as "Analytic Stories" values(annotations._all)
    as "Annotations" values(annotations.mitre_attack.mitre_tactic) as "ATT&CK Tactics"
    by normalized_risk_object | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: User $user$ on $dest$ spawned Windows Script Host from Winword.exe
  risk_objects:
  - field: dest
    type: system
    score: 70
  - field: user
    type: user
    score: 70
  threat_objects:
  - field: process_name
    type: process_name
tags:
  analytic_story:
  - Spearphishing Attachments
  - Compromised Windows Host
  - CVE-2023-21716 Word RTF Heap Corruption
  asset_type: Endpoint
  mitre_attack_id:
  - T1566.001
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: 
      https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1566.001/macro/windows-sysmon_wsh.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: XmlWinEventLog
